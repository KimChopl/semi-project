<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.pugly.farm.model.dao.FarmMapper">

	<sql id="farmColumn">
		SELECT
		       FARM_NO farmNo,
		       NICKNAME seller,
		       FARM_TITLE farmTitle,
		       NVL((SELECT
		               COUNT(ATT_BY_FARM)
		          FROM
		               TB_FARM_ATTENTION
		          WHERE
		               ATT_BY_FARM = TB_FARM.FARM_NO
		         GROUP
		            BY
		               ATT_BY_FARM),0) ATT,
		        NVL((SELECT
		               COUNT(LIKE_BY_FARM)
		          FROM
		               TB_FARM_LIKE
		          WHERE
		               LIKE_BY_FARM = TB_FARM.FARM_NO
		         GROUP
		            BY
		               LIKE_BY_FARM),0) AS "FARM_LIKE",
		        FARM_COUNT farmCount,
		        DISTRICT address,
		        PRODUCT_NAME productName,
		        FARM_CREATE_DATE farmCreateDate,
		        FARM_MODIFY_DATE farmModifyDate,
		        FARM_PRICE farmPrice,
		        IMG_PATH imgPath,
		        ORIGIN_IMG_NAME originImgName,
		        CHANGE_IMG_NAME changeImgName,
        		IMG_NO imgNo,
        		IMG_STATUS status,
        		IMG_LEVEL imgLevel,
        		NVL((SELECT
                       ROUND(AVG(RATING), 1)
                  FROM
                       TB_REVIEW
                 WHERE
                       REVIEW_POST_NO = TB_FARM.FARM_NO
                 GROUP
                    BY
                       REVIEW_POST_NO),0) rating,
                IMG_PATH imgPath
		  FROM
		       TB_FARM
		  JOIN
		       TB_MEMBER M ON(SELLER_NO = M.MEMBER_NO)
		  LEFT
		  JOIN
		       TB_IMAGE ON(IMG_POST_NO = FARM_NO)
		  JOIN
		       TB_ADDRESS TA ON (SELLER_NO = TA.MEMBER_NO)
		  JOIN
		       TB_FARM_PRODUCT ON(PRODUCT_NO = FARM_PRODUCT_NO)
		  JOIN
               TB_STATE_CATEGORY S ON (S.STATE_CODE = TA.STATE_CODE)
		 WHERE
		       DELETE_ASK = 'N'
		   AND
		       (IMG_LEVEL = 1 OR IMG_LEVEL IS NULL)
		   AND
		       (CATEGORY_NO = 3
           OR
               CATEGORY_NO IS NULL)
		   AND
		       ADDRESS_TYPE = 1
	</sql>


	<select id="countFarm" resultType="_int">
		SELECT
		       COUNT(FARM_NO)
		  FROM
		       TB_FARM
		 WHERE
		       DELETE_ASK = 'N'
	</select>
	<resultMap id="farmList" type="farm">
		<id property="farmNo" column="farmNo" />
		<result property="seller" column="seller" />
		<result property="attention" column="ATT" />
		<result property="like" column="FARM_LIKE" />
		<result property="farmTitle" column="farmTitle" />
		<result property="farmCount" column="farmCount" />
		<result property="farmPrice" column="farmPrice" />
		<result property="address" column="address" />
		<result property="productName" column="productName" />
		<result property="farmCreateDate" column="farmCreateDate" />
		<result property="farmModifyDate" column="farmModifyDate" />
		<result property="rating" column="rating" />
		<collection property="imgList"  ofType="Image">
			<result property="originImgName" column="originImgName" />
			<result property="changeImgName" column="changeImgName" />
			<result property="imgNo" column="imgNo" />
			<result property="imgLevel" column="imgLevel"/>
			<result property="imgPath" column="imgPath" />
			<result property="status" column="status" />
		</collection>
	</resultMap>
	<select id="selectFarmList" resultMap="farmList">
		<include refid="farmColumn" />
		 ORDER
		    BY
		       FARM_CREATE_DATE DESC
	</select>
	
	<select id="selectPrice" resultType="farmPrice">
		SELECT
		      MIN(FARM_PRICE) minPrice,
		      MAX(FARM_PRICE) maxPrice
		 FROM
		      TB_FARM
		WHERE
		      DELETE_ASK = 'N'
	</select>
	
	<select id="selectState" resultType="stateCategory">
		SELECT
		       STATE_CODE AS stateCode,
		       STATE_NAME stateName
		  FROM
		       TB_STATE_CATEGORY
	</select>
	
	<select id="selectFarmProduct" resultType="farmProduct">
		SELECT
		       PRODUCT_NO productNo,
		       PRODUCT_NAME productName
		  FROM
		       TB_FARM_PRODUCT
	</select>
	
	<select id="suchByKeyword" resultMap="farmList" parameterType="map">
		<include refid="farmColumn" />
		<if test="state.size != 0">
		AND
		    S.STATE_CODE IN
		<foreach collection="state" item="state" open="(" close=")" separator=",">
			#{state}
		</foreach>
		</if>
		<if test="product.size != 0">
			AND
			    FARM_PRODUCT_NO IN
			<foreach collection="product" item="pro" open="(" close=")" separator=",">
				#{pro}
			</foreach>
		</if>
		<if test="option == 'date'">
			ORDER
			   BY
			      farmCreateDate DESC
		</if>
		<if test="option == 'rating'">
			ORDER
			   BY
			      rating DESC
		</if>
		<if test="option == 'price'">
			ORDER
			   BY
			      farmPrice DESC
		</if>
	</select>
	<select id="countSuchList" parameterType="map" resultType="_int">
		SELECT
		       COUNT(FARM_NO)
		  FROM
		       TB_FARM
		  JOIN
		       TB_ADDRESS TA ON(SELLER_NO = TA.MEMBER_NO)
		  JOIN
		       TB_STATE_CATEGORY TSC ON (TA.STATE_CODE = TSC.STATE_CODE)
		 WHERE
		       DELETE_ASK = 'N'
		   AND
		       ADDRESS_TYPE = 1
	  		<if test="state.size != 0">
			AND
			    TSC.STATE_CODE IN
			<foreach collection="state" item="state" open="(" close=")" separator=",">
				#{state}
			</foreach>
			</if>
			<if test="product.size != 0">
				AND
				    FARM_PRODUCT_NO IN
				<foreach collection="product" item="pro" open="(" close=")" separator=",">
					#{pro}
				</foreach>
			</if>
	</select>
	
	<resultMap id="detailFarm" type="farm">
		<id property="farmNo" column="farmNo"/>
		<result property="seller" column="seller" />
		<result property="farmTitle" column="farmTitle" />
		<result property="farmContent" column="farmContent" />
		<result property="bewareList" column="bewareList" />
		<result property="farmCreateDate" column="farmCreateDate" />
		<result property="farmModifyDate" column="farmModifyDate" />
		<result property="address" column="address" />
		<result property="farmPrice" column="farmPrice" />
		<result property="attention" column="attention" />
		<result property="like" column="FARM_LIKE" />
		<result property="rating" column="rating" />
		<result property="productName" column="productName" />
		<result property="categoryNo" column="categoryNo" />
		<result property="categoryName" column="categoryName" />
		<result property="stateCode" column="stateCode" />
		<result property="productName" column="productName" />
		<result property="addressNo" column="addressNo" />
		<collection property="imgList" ofType="image">
			<result property="originImgName" column="originImgName" />
			<result property="changeImgName" column="changeImgName" />
			<result property="imgNo" column="imgNo" />
			<result property="imgLevel" column="imgLevel"/>
			<result property="imgPath" column="imgPath" />
			<result property="status" column="status" />
		</collection>
			
		<collection property="facility" ofType="facility">
			<result property="facilityNo" column="facilityNo"/>
			<result property="facilityName" column="facilityName"/>
		</collection>
	</resultMap>
	<select id="selectDetailFarm" parameterType="long" resultMap="detailFarm">
		SELECT
		       FARM_NO farmNo,
		       NICKNAME seller,
		       FARM_TITLE farmTitle,
		       FARM_CONTENT farmContent,
		       PRODUCT_NAME prodictName,
		       BEWARE_LIST bewareList,
		       FARM_CREATE_DATE farmCresteDate,
		       FARM_MODIFY_DATE farmModifyDate,
		       FACILITY_NO facilityNo,
		       FACILITY_NAME facilityName,
		       CATEGORY_NO categoryNo,
		       CATEGORY_NAME categoryName,
		       ADDRESS_NO addressNo,
		       STATE_NAME stateName,
		       DISTRICT address,
		       IMG_PATH imgPath,
		       ORIGIN_IMG_NAME originImgName,
		       CHANGE_IMG_NAME changeImgName,
		       IMG_LEVEL imgLevel,
		       IMG_NO imgNo,
		       A.STATE_CODE stateCode,
		       PRODUCT_NAME productName,
		       CATEGORY_NO categotyNo,
		       IMG_STATUS status,
		        NVL((SELECT
		                   COUNT(ATT_BY_FARM)
		              FROM
		                   TB_FARM_ATTENTION
		              WHERE
		                   ATT_BY_FARM = TB_FARM.FARM_NO
		             GROUP
		                BY
		                   ATT_BY_FARM),0) attention,
		            NVL((SELECT
		                   COUNT(LIKE_BY_FARM)
		              FROM
		                   TB_FARM_LIKE
		              WHERE
		                   LIKE_BY_FARM = TB_FARM.FARM_NO
		             GROUP
		                BY
		                   LIKE_BY_FARM),0) AS "FARM_LIKE",
		       NVL((SELECT
		                   ROUND(AVG(RATING), 1)
		              FROM
		                   TB_REVIEW
		             WHERE
		                   REVIEW_POST_NO = TB_FARM.FARM_NO
		             GROUP
		                BY
		                   REVIEW_POST_NO),0) rating
		  FROM
		       TB_FARM
		  LEFT
		  JOIN
		       TB_FAC_BRIGE ON (BR_FARM_NO = FARM_NO)
		  LEFT
		  JOIN
		       TB_FACILITY ON (FACILITY_NO = BR_FACILITY_NO)
		  LEFT
		  JOIN
		       TB_IMAGE ON(IMG_POST_NO = FARM_NO)
		  LEFT
		  JOIN
		       TB_MAIN_CATEGORY ON(MAIN_CATEGORY_NO = CATEGORY_NO)
		  JOIN
		       TB_ADDRESS A ON(FARM_ADDRESS_NO = A.ADDRESS_NO)
		  JOIN
		       TB_FARM_PRODUCT ON (PRODUCT_NO = FARM_PRODUCT_NO)
		  JOIN
		       TB_MEMBER M ON (SELLER_NO = M.MEMBER_NO)
		  JOIN
		       TB_STATE_CATEGORY S ON (S.STATE_CODE = A.STATE_CODE)
		 WHERE
		       FARM_NO = #{farmNo}
		   AND
		       (CATEGORY_NO = 3
		    OR
		       CATEGORY_NO IS NULL)
		   AND
		       DELETE_ASK = 'N'
	</select>
	<update id="updateCount" parameterType="long">
		UPDATE
		       TB_FARM
		   SET
		       FARM_COUNT = FARM_COUNT + 1
		 WHERE
		       FARM_NO = #{farmNo}
		   AND
		       DELETE_ASK = 'N'
	</update>
	<select id="selectFacility" resultType="facility">
		SELECT
		      FACILITY_NO facilityNo,
		      FACILITY_NAME facilityName
		 FROM
		      TB_FACILITY
	</select>
	<insert id="insertFarm" parameterType="farm" useGeneratedKeys="true">
		<selectKey keyProperty="farmNo" resultType="long" order="BEFORE">
			SELECT
			      SEQ_FARM.NEXTVAL
			  FROM
			      DUAL
		</selectKey>
		INSERT
		  INTO
		       TB_FARM
		       (
				FARM_NO,
				SELLER_NO,
				FARM_PRODUCT_NO,
				FARM_TITLE,
				FARM_CONTENT,
				BEWARE_LIST,
				FARM_PRICE,
				FARM_ADDRESS_NO
		       )
		VALUES
		       (
		       #{farmNo},
		       #{seller},
		       #{productName},
		       #{farmTitle},
		       #{farmContent},
		       #{bewareList},
		       #{farmPrice},
		       #{address}
		       )
	</insert>
	
	<insert id="insertFacility" parameterType="facility">
		INSERT
		  INTO
		      TB_FAC_BRIGE
		VALUES
		      (#{facilityNo},
		       #{facilityName})
	</insert>
	<update id="updateFarm" parameterType="farm">
		UPDATE
		       TB_FARM
		   SET
		       FARM_TITLE = #{farmTitle},
		       FARM_CONTENT = #{farmContent},
		       FARM_MODIFY_DATE = SYSDATE,
		       BEWARE_LIST = #{bewareList},
		       FARM_PRICE = #{farmPrice},
		       FARM_PRODUCT_NO = #{productName},
		       FARM_ADDRESS_NO = #{addressNo}
		 WHERE
		       FARM_NO = #{farmNo}
		   AND
		       DELETE_ASK = 'N'
	</update>
	<delete id="deleteFacility" parameterType="facility">
		DELETE
		  FROM
		       TB_FAC_BRIGE
		 WHERE
		       BR_FACILITY_NO = #{facilityNo}
		   AND
		       BR_FARM_NO = #{facilityName}
	</delete>
</mapper>
