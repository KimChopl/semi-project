<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kh.pugly.member.model.dao.MemberMapper">

	<sql id="memberColumn">
		SELECT
               MEMBER_NO memberNo,
               me.FK_CATEGORY_NO categoryNo,
               my.MB_CATEGORY_NAME categoryName,
               MEMBER_ID memberId,
               MEMBER_PWD memberPwd,
               NICKNAME nickname,
               MEMBER_NAME memberName,
               PHONE phone,
               TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS createDate
          FROM
               TB_MEMBER me
          JOIN
               TB_MEMBER_TYPE my ON (me.FK_CATEGORY_NO = my.MB_CATEGORY_NO)
         WHERE
               STATUS = 'Y'
	</sql>

	<select id="selectMember" parameterType="member" resultType="member">
		<include refid="memberColumn" />
           AND
               MEMBER_ID = #{memberId}
	</select>

	
	<select id="selectAddresses" parameterType="long" resultType="address">
		SELECT
               ADDRESS_NO addressNo,
               SC.STATE_CODE stateCode,
               STATE_NAME stateName,
               ADDRESS_TYPE addressType,
               DISTRICT district,
               AD.MEMBER_NO memberNo
          FROM
               TB_ADDRESS AD
          JOIN
               TB_STATE_CATEGORY SC ON(SC.STATE_CODE = AD.STATE_CODE)
          JOIN
               TB_MEMBER ME ON(AD.MEMBER_NO = ME.MEMBER_NO)
         WHERE
               ME.MEMBER_NO = #{memberNo}
         ORDER
            BY
               ADDRESS_TYPE
	</select>
	<select id="selectAddressCount" parameterType="long" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       TB_ADDRESS
		 WHERE
		       MEMBER_NO = #{memberNo}
	</select>
	<select id="selectInfoAddresses" parameterType="long" resultType="address">
		SELECT
               ADDRESS_NO addressNo,
               SC.STATE_CODE stateCode,
               STATE_NAME stateName,
               ADDRESS_TYPE addressType,
               DISTRICT district,
               AD.MEMBER_NO memberNo
          FROM
               TB_ADDRESS AD
          JOIN
               TB_STATE_CATEGORY SC ON(SC.STATE_CODE = AD.STATE_CODE)
          JOIN
               TB_MEMBER ME ON(AD.MEMBER_NO = ME.MEMBER_NO)
         WHERE
               ME.MEMBER_NO = #{memberNo}
         ORDER
            BY
               ADDRESS_NO DESC
	</select>
	
	<select id="selectStateCategory" resultType="address">
		SELECT
		       STATE_CODE stateCode,
		       STATE_NAME stateName
		  FROM
		       TB_STATE_CATEGORY
		 ORDER
		    BY
		       STATE_CODE
	</select>
	
	<select id="selectMemberCategory" resultType="member">
		SELECT
		       MB_CATEGORY_NO categoryNo,
		       MB_CATEGORY_NAME categoryName
		  FROM
		       TB_MEMBER_TYPE
		 ORDER
		    BY
		       MB_CATEGORY_NO DESC
	</select>
	
	<insert id="insertMember" parameterType="member">
		INSERT
          INTO
	           TB_MEMBER
	           (
	           MEMBER_NO,
	           FK_CATEGORY_NO,
	           MEMBER_ID,
	           MEMBER_PWD,
	           NICKNAME,
	           MEMBER_NAME,
	           PHONE 
	           )
        VALUES
               (
               SEQ_MNO.NEXTVAL,
               #{categoryNo},
               #{memberId},
               #{memberPwd},
               #{nickname},
               #{memberName},
               #{phone}
               )
	</insert>
	
	<insert id="insertAddress" parameterType="address">
		INSERT
          INTO
               TB_ADDRESS
               (
               ADDRESS_NO,
               STATE_CODE,
               MEMBER_NO,
               ADDRESS_TYPE,
               DISTRICT
               )
        VALUES
	           (
	           SEQ_ANO.NEXTVAL,
	           #{stateCode},
	           SEQ_MNO.CURRVAL,
	           #{addressType},
	           #{district}
	           )
	</insert>
	
	<insert id="insertMemberImage" parameterType="image">
		INSERT
		  INTO
		       TB_MEMBER_IMAGE
		       (
		       MEMBER_IMG_NO,
		       MEMBER_NO,
		       ORIGIN_IMG_NAME,
		       CHANGE_IMG_NAME,
		       IMG_PATH
		       )
		VALUES
		       (
		       SEQ_MINO.NEXTVAL,
		       SEQ_MNO.CURRVAL,
		       #{originImgName},
		       #{changeImgName},
		       #{imgPath}
		       )
	</insert>
	
	<select id="selectMemberImage" parameterType="long" resultType="image">
		SELECT
               MEMBER_IMG_NO imgNo,
               ORIGIN_IMG_NAME originImgName,
               CHANGE_IMG_NAME changeImgName,
               UPLOAD_DATE uploadDate,
               IMG_LEVEL imgLevel,
               IMG_STATUS imgStatus
          FROM
               TB_MEMBER_IMAGE
         WHERE
               IMG_STATUS = 'Y'
           AND
               MEMBER_NO = #{memberNo}
	</select>
	
	<update id="updateMember" parameterType="member">
		UPDATE
		       TB_MEMBER
		   SET
		       NICKNAME = #{nickname},
		       MEMBER_PWD = #{memberPwd},
		       MEMBER_NAME = #{memberName},
		       PHONE = #{phone},
		       MODIFY_DATE = SYSDATE
		 WHERE
		       MEMBER_NO = #{memberNo} 
	</update>
	
	<update id="updateMemberImage" parameterType="map">
		UPDATE
		       TB_MEMBER_IMAGE
		   SET
		       IMG_STATUS = 'N'
		 WHERE
		       MEMBER_NO = #{memberNo}
		   AND
		       MEMBER_IMG_NO = #{imgNo}
	</update>
	
	<insert id="updateMemberInsertImage" parameterType="map">
		INSERT
		  INTO
		       TB_MEMBER_IMAGE
		       (
		       MEMBER_IMG_NO,
		       MEMBER_NO,
		       ORIGIN_IMG_NAME,
		       CHANGE_IMG_NAME
		       )
		VALUES
		       (
		       SEQ_MINO.NEXTVAL,
		       #{memberNo},
		       #{originImgName},
		       #{changeImgName}
		       )
	</insert>
	
	<update id="deleteMember" parameterType="member">
		UPDATE
		       TB_MEMBER
		   SET
		       STATUS = 'N',
		       MODIFY_DATE = SYSDATE
		 WHERE
		       MEMBER_NO = #{memberNo}
	</update>
	
	<update id="updateAddress" parameterType="map">
		UPDATE
               TB_ADDRESS
           SET
               STATE_CODE = #{stateCode},
               DISTRICT = #{district},
               ADDRESS_TYPE = #{addressType}
         WHERE
               MEMBER_NO = #{memberNo}
           AND
               ADDRESS_NO = #{addressNo}
	</update>
	<update id="updateAddressType" parameterType="long">
		UPDATE
               TB_ADDRESS
           SET
               ADDRESS_TYPE = 2
         WHERE
               MEMBER_NO = #{memberNo}
	</update>
	
	<insert id="insertNewAddress" parameterType="map">
		INSERT
          INTO
               TB_ADDRESS
               (
               ADDRESS_NO,
               STATE_CODE,
               MEMBER_NO,
               ADDRESS_TYPE,
               DISTRICT
               )
        VALUES
	           (
	           SEQ_ANO.NEXTVAL,
	           #{stateCode},
	           #{memberNo},
	           #{addressType},
	           #{district}
	           )
	</insert>
	
	<delete id="deleteAddress" parameterType="map">
		DELETE
          FROM
               TB_ADDRESS
         WHERE
               ADDRESS_NO = #{addressNo}
           AND
               MEMBER_NO = #{memberNo}
	</delete>
	
	<select id="findMemberId" parameterType="member" resultType="String">
		SELECT
               MEMBER_ID memberId
          FROM
               TB_MEMBER
         WHERE
               MEMBER_NAME = #{memberName}
           AND
               PHONE = #{phone}
           AND
               FK_CATEGORY_NO = #{categoryNo}
           AND
               STATUS = 'Y'
         ORDER
            BY
               MEMBER_NO DESC
	</select>

	<select id="selectMemberInfo" parameterType="long" resultType="member">
		<include refid="memberColumn" />
		AND
		    MEMBER_NO = #{memberNo}
	</select>

</mapper>